// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/infrastructure/config/config_interface.go

// Package config is a generated GoMock package.
package config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	pflag "github.com/spf13/pflag"
)

// MockConfigInterface is a mock of ConfigInterface interface.
type MockConfigInterface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigInterfaceMockRecorder
}

// MockConfigInterfaceMockRecorder is the mock recorder for MockConfigInterface.
type MockConfigInterfaceMockRecorder struct {
	mock *MockConfigInterface
}

// NewMockConfigInterface creates a new mock instance.
func NewMockConfigInterface(ctrl *gomock.Controller) *MockConfigInterface {
	mock := &MockConfigInterface{ctrl: ctrl}
	mock.recorder = &MockConfigInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigInterface) EXPECT() *MockConfigInterfaceMockRecorder {
	return m.recorder
}

// GetBool mocks base method.
func (m *MockConfigInterface) GetBool(key string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBool", key)
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetBool indicates an expected call of GetBool.
func (mr *MockConfigInterfaceMockRecorder) GetBool(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBool", reflect.TypeOf((*MockConfigInterface)(nil).GetBool), key)
}

// GetFloat64 mocks base method.
func (m *MockConfigInterface) GetFloat64(key string) float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFloat64", key)
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetFloat64 indicates an expected call of GetFloat64.
func (mr *MockConfigInterfaceMockRecorder) GetFloat64(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFloat64", reflect.TypeOf((*MockConfigInterface)(nil).GetFloat64), key)
}

// GetInt mocks base method.
func (m *MockConfigInterface) GetInt(key string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInt", key)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetInt indicates an expected call of GetInt.
func (mr *MockConfigInterfaceMockRecorder) GetInt(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInt", reflect.TypeOf((*MockConfigInterface)(nil).GetInt), key)
}

// GetInt32 mocks base method.
func (m *MockConfigInterface) GetInt32(key string) int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInt32", key)
	ret0, _ := ret[0].(int32)
	return ret0
}

// GetInt32 indicates an expected call of GetInt32.
func (mr *MockConfigInterfaceMockRecorder) GetInt32(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInt32", reflect.TypeOf((*MockConfigInterface)(nil).GetInt32), key)
}

// GetInt64 mocks base method.
func (m *MockConfigInterface) GetInt64(key string) int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInt64", key)
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetInt64 indicates an expected call of GetInt64.
func (mr *MockConfigInterfaceMockRecorder) GetInt64(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInt64", reflect.TypeOf((*MockConfigInterface)(nil).GetInt64), key)
}

// GetIntSlice mocks base method.
func (m *MockConfigInterface) GetIntSlice(key string) []int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIntSlice", key)
	ret0, _ := ret[0].([]int)
	return ret0
}

// GetIntSlice indicates an expected call of GetIntSlice.
func (mr *MockConfigInterfaceMockRecorder) GetIntSlice(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIntSlice", reflect.TypeOf((*MockConfigInterface)(nil).GetIntSlice), key)
}

// GetString mocks base method.
func (m *MockConfigInterface) GetString(key string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetString", key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetString indicates an expected call of GetString.
func (mr *MockConfigInterfaceMockRecorder) GetString(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetString", reflect.TypeOf((*MockConfigInterface)(nil).GetString), key)
}

// GetStringSlice mocks base method.
func (m *MockConfigInterface) GetStringSlice(key string) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStringSlice", key)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetStringSlice indicates an expected call of GetStringSlice.
func (mr *MockConfigInterfaceMockRecorder) GetStringSlice(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStringSlice", reflect.TypeOf((*MockConfigInterface)(nil).GetStringSlice), key)
}

// GetUint mocks base method.
func (m *MockConfigInterface) GetUint(key string) uint {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUint", key)
	ret0, _ := ret[0].(uint)
	return ret0
}

// GetUint indicates an expected call of GetUint.
func (mr *MockConfigInterfaceMockRecorder) GetUint(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUint", reflect.TypeOf((*MockConfigInterface)(nil).GetUint), key)
}

// GetUint16 mocks base method.
func (m *MockConfigInterface) GetUint16(key string) uint16 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUint16", key)
	ret0, _ := ret[0].(uint16)
	return ret0
}

// GetUint16 indicates an expected call of GetUint16.
func (mr *MockConfigInterfaceMockRecorder) GetUint16(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUint16", reflect.TypeOf((*MockConfigInterface)(nil).GetUint16), key)
}

// GetUint32 mocks base method.
func (m *MockConfigInterface) GetUint32(key string) uint32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUint32", key)
	ret0, _ := ret[0].(uint32)
	return ret0
}

// GetUint32 indicates an expected call of GetUint32.
func (mr *MockConfigInterfaceMockRecorder) GetUint32(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUint32", reflect.TypeOf((*MockConfigInterface)(nil).GetUint32), key)
}

// GetUint64 mocks base method.
func (m *MockConfigInterface) GetUint64(key string) uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUint64", key)
	ret0, _ := ret[0].(uint64)
	return ret0
}

// GetUint64 indicates an expected call of GetUint64.
func (mr *MockConfigInterfaceMockRecorder) GetUint64(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUint64", reflect.TypeOf((*MockConfigInterface)(nil).GetUint64), key)
}

// ReadConfig mocks base method.
func (m *MockConfigInterface) ReadConfig(arg0 *pflag.FlagSet) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadConfig", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReadConfig indicates an expected call of ReadConfig.
func (mr *MockConfigInterfaceMockRecorder) ReadConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadConfig", reflect.TypeOf((*MockConfigInterface)(nil).ReadConfig), arg0)
}

// Set mocks base method.
func (m *MockConfigInterface) Set(key string, value interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", key, value)
}

// Set indicates an expected call of Set.
func (mr *MockConfigInterfaceMockRecorder) Set(key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockConfigInterface)(nil).Set), key, value)
}

// SetDefault mocks base method.
func (m *MockConfigInterface) SetDefault(key string, value interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDefault", key, value)
}

// SetDefault indicates an expected call of SetDefault.
func (mr *MockConfigInterfaceMockRecorder) SetDefault(key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDefault", reflect.TypeOf((*MockConfigInterface)(nil).SetDefault), key, value)
}

// Stop mocks base method.
func (m *MockConfigInterface) Stop() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Stop")
}

// Stop indicates an expected call of Stop.
func (mr *MockConfigInterfaceMockRecorder) Stop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockConfigInterface)(nil).Stop))
}
