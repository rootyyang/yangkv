// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/infrastructure/rpc/rpc_raft_protocol.go

// Package rpc is a generated GoMock package.
package rpc

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRaftServiceHandler is a mock of RaftServiceHandler interface.
type MockRaftServiceHandler struct {
	ctrl     *gomock.Controller
	recorder *MockRaftServiceHandlerMockRecorder
}

// MockRaftServiceHandlerMockRecorder is the mock recorder for MockRaftServiceHandler.
type MockRaftServiceHandlerMockRecorder struct {
	mock *MockRaftServiceHandler
}

// NewMockRaftServiceHandler creates a new mock instance.
func NewMockRaftServiceHandler(ctrl *gomock.Controller) *MockRaftServiceHandler {
	mock := &MockRaftServiceHandler{ctrl: ctrl}
	mock.recorder = &MockRaftServiceHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRaftServiceHandler) EXPECT() *MockRaftServiceHandlerMockRecorder {
	return m.recorder
}

// AppendEntires mocks base method.
func (m *MockRaftServiceHandler) AppendEntires(ctx context.Context, req *AppendEntiresReq) (*AppendEntiresResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AppendEntires", ctx, req)
	ret0, _ := ret[0].(*AppendEntiresResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AppendEntires indicates an expected call of AppendEntires.
func (mr *MockRaftServiceHandlerMockRecorder) AppendEntires(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppendEntires", reflect.TypeOf((*MockRaftServiceHandler)(nil).AppendEntires), ctx, req)
}

// RequestVote mocks base method.
func (m *MockRaftServiceHandler) RequestVote(ctx context.Context, req *RequestVoteReq) (*RequestVoteResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestVote", ctx, req)
	ret0, _ := ret[0].(*RequestVoteResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestVote indicates an expected call of RequestVote.
func (mr *MockRaftServiceHandlerMockRecorder) RequestVote(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestVote", reflect.TypeOf((*MockRaftServiceHandler)(nil).RequestVote), ctx, req)
}
